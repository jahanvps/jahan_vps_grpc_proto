syntax = "proto3";

package package;

message Package {
  string id = 1;
  string name = 2;
  int32 dur = 3;
  string durType = 4;
  int32 price = 5;
  string title= 6;
  optional string descJson = 7;
  string status = 8;
  optional string descHTML = 9;
  string createdAt = 10;
}

message PackageDto {
  string name = 1;
  int32 dur = 2;
  string durType = 3;
  int32 price = 4;
  string title= 5;
  optional string descJson = 6;
  string status = 7;
  optional string descHTML = 8;
}

message PackageDtoWithId {
  string id = 1;
  string name = 2;
  int32 dur = 3;
  string durType = 4;
  int32 price = 5;
  string title= 6;
  optional string descJson = 7;
  string status = 8;
  optional string descHTML = 9;
}

message UserPackage {
  string id = 1;
  string userId = 2;
  string packageId = 3;
  string buyDate = 4;
  string status = 5;
  string packageInfo = 6;
  string userInfo = 7;
  string createdAt = 8;
  string updatedAt = 9;
}

service PackageService {
  rpc FindOne (PkgByIdRequest) returns (PkgsResponse) {}
  rpc Create (PackageDto) returns (PkgsResponse) {}
  rpc DeleteOne (PkgByIdRequest) returns (PkgsResponse) {}
  rpc UpdateOne (PackageDtoWithId) returns (PkgsResponse) {}
  rpc GetActivePkgs (PkgsRequest) returns (PkgsResponse) {}

  // user package
  rpc GetActivePkgUsersByUserId (GetPckgUsersByUserIdRequest) returns (PaginatedUserPackagesResponse) {}
  rpc GetAllPkgUsersByUserId (GetPckgUsersByUserIdRequest) returns (PaginatedUserPackagesResponse) {}
  rpc DelPkgUserByPkgUserId (PkgByIdRequest) returns (UserPackageResponse) {}
  rpc AddPkgUser (AddPckgUserRequest) returns (UserPackageResponse) {}
}

message AddPckgUserRequest {
  string userId = 1;
  string packageId = 2;
}

message GetPckgUsersByUserIdRequest {
  string id = 1;
  optional int32 page = 2;
  optional int32 limit = 3;
}

message UserPackageResponse {
  int32 status = 1;
  repeated string error = 2;
  UserPackage userPackage = 3;
}

message PaginationData {
  int32 totalCount = 1;
  int32 page = 2;
  int32 limit = 3;
  int32 pageCount = 4;
}

message ResultData {
  repeated UserPackage userPackages = 1;
  optional PaginationData paginationInfo = 2;
}

message PaginatedUserPackagesResponse {
  int32 status = 1;
  repeated string error = 2;
  ResultData data = 3;
}

message PkgByIdRequest {
  string id = 1;
}

message PkgsRequest {
}

message PkgsResponse {
  int32 status = 1;
  repeated string error = 2;
  repeated Package packages = 3;
}

